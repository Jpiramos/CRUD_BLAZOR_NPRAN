@page "/medicalappointments/delete"
@inject ClinicFlow_Blazor.Data.ApplicationDbContext DB
@using ClinicFlow_Blazor.Models
@inject NavigationManager NavigationManager
@using Microsoft.EntityFrameworkCore

<PageTitle>Delete</PageTitle>

<h1>Deletar</h1>

<h3>Tem certeza que deseja deletar ?</h3>
<div>
    <h4>Consulta</h4>
    <hr />
    @if (medicalappointment is null)
    {
        <p><em>Carregando...</em></p>
    }
    else {
        <dl class="row">
            <dt class="col-sm-2">Data da consulta</dt>
            <dd class="col-sm-10">@medicalappointment.AppointmentDate</dd>
        </dl>
        <dl class="row">
            <dt class="col-sm-2">Diagnóstico</dt>
            <dd class="col-sm-10">@medicalappointment.Diagnosis</dd>
        </dl>
        <EditForm method="post" Model="medicalappointment" OnValidSubmit="DeleteMedicalAppointment" FormName="delete" Enhance>
            <button type="submit" class="btn btn-danger" disabled="@(medicalappointment is null)">Deletar</button> |
            <a href="/medicalappointments">Voltar à lista</a>
        </EditForm>
    }
</div>

@code {
    MedicalAppointment? medicalappointment;

    [SupplyParameterFromQuery]
    public int DoctorId { get; set; }

    protected override async Task OnInitializedAsync()
    {
        medicalappointment = await DB.MedicalAppointments.FirstOrDefaultAsync(m => m.DoctorId == DoctorId);

        if (medicalappointment is null)
        {
            NavigationManager.NavigateTo("notfound");
        }
    }

    public async Task DeleteMedicalAppointment()
    {
        DB.MedicalAppointments.Remove(medicalappointment!);
        await DB.SaveChangesAsync();
        NavigationManager.NavigateTo("/medicalappointments");
    }
}
